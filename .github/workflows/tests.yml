name: UnitTest

on: [push, pull_request]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install CUDA
        env:
          cuda: "10.0"
        run: /
          source ./scripts/actions/install_cuda.sh
          if [[ $? -eq 0 ]]; then
            echo "Adding CUDA to CUDA_PATH, PATH and LD_LIBRARY_PATH"
            echo "CUDA_PATH=${CUDA_PATH}" >> $GITHUB_ENV
            echo "${CUDA_PATH}/bin" >> $GITHUB_PATH
            echo "LD_LIBRARY_PATH=${CUDA_PATH}/lib:${LD_LIBRARY_PATH}" >> $GITHUB_ENV
          fi
        shell: bash

      - name: Install/Select gcc and g++ 
        run: |
          sudo apt-get install -y gcc-8 g++-8
          echo "CC=/usr/bin/gcc-8" >> $GITHUB_ENV
          echo "CXX=/usr/bin/g++-8" >> $GITHUB_ENV
          echo "CUDAHOSTCXX=/usr/bin/g++-8" >> $GITHUB_ENV

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      
      - name: Lint flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 80 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=80 --statistics
      
      - name: Test with pytest
        run: |
          GPU=1 python -m pytest -s -v